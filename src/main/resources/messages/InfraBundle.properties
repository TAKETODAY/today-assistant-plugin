#
# Original Author -> Harry Yang (taketoday@foxmail.com) https://taketoday.cn
# Copyright © TODAY & 2017 - 2022 All Rights Reserved.
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see [http://www.gnu.org/licenses/]
#
# @formatter:off

today.strategies.file.type=Today Strategies
inspection.group.core=Today Core

StrategiesRegistrationAnnotator.today.strategies.registration=today.strategies registration
StrategiesRegistrationAnnotator.choose.registration=Choose Registration
StrategiesRegistrationAnnotator.tooltip=Navigate to Registration in today.strategies
StrategiesClassesListJamConverter.unresolved.message.pattern=Cannot resolve ''{0}'' for key ''{1}''

el.location.name=Today Infrastructure

infra=Infrastructure
infra.bean=Infra Bean

# cache
cacheable.should.be.defined.on.concrete.method=Infra doesn't recommend to annotate interface methods with @Cache* annotation
cacheable.and.cache.put.on.the.same.method=Infra doesn't recommend to use @CachePut and @Cacheable annotate on the same method


#inspection
scopes.inspection.display.name=Unknown <bean> scope

model.inspection.invalid.identifier.message=''{0}'' does not follow bean naming convention
model.inspection.invalid.lowercase.name.message=''{0}'' should start with lowercase letter

model.inspection.bean.factory.method=Incorrectly defined method referenced in "factory-method" attribute
model.inspection.bean.public.factory.method=Incorrect non-public method referenced in "factory-method" attribute

model.property.error.message=Cannot resolve property ''{0}''
model.create.factory.method.quickfix.message=Create factory method ''{0}''
model.create.factory.method.quickfix.family.name=Create factory method
model.add.constructor.args.for.method.quickfix.message=Add <constructor-arg>(s) for ''{0}''
model.add.constructor.args.for.method.quickfix.message.family.name=Add <constructor-arg>(s)
model.method.signature.parse.error.message=Could not parse signature ''{0}''
model.method.resolve.class.error.message=Could not resolve class ''{0}''
model.bean.not.found.error.message=Could not find bean with name ''{0}''
model.method.choose.method=Choose Method

model.bean.quickfix.message=Create new bean ''{0}''
model.bean.quickfix.message.family.name=Create new bean

model.inspection.display.name=Incorrect Infra Core XML-based application context
model.inspection.display.bean.name.convention=Infra bean name violates conventions
model.inspection.bean.property.value=Unassignable injection point type in XML application context
model.inspection.bean.constructor.arg=Incorrect constructor injection in XML Infra bean
model.inspection.bean.autowiring=Incorrect XML Infra bean autowiring
model.inspection.validator.progress.text=Validating Infra Model\u2026

model.goto.related.item.group.context=Infra Context: "{0}"
model.goto.related.item.group.application.context=Infra Application Contexts
model.goto.related.item.group.test.context=Infra Test Contexts

bean.lookup.method.inspection=Incorrectly configured XML bean lookup-method
bean.lookup.method.incorrect.return.type=Incorrect lookup method return type
bean.lookup.method.constructor.not.allowed=Constructor is not allowed here
bean.lookup.method.return.type.mismatch=Lookup method return type does not match the ''{0}'' bean class
bean.lookup.method.bean.has.no.class=''{0}'' bean has no class
bean.lookup.method.must.be.public.or.protected=Method must be public or protected
bean.lookup.method.must.have.no.parameters=Method must have no parameters
bean.lookup.method.must.be.not.static=Static method not allowed here


bean.abstract.bean.references.inspection=Incorrect reference to abstract bean
bean.referenced.by.abstract.bean=Abstract bean cannot be used here

bean.autowire.escape.inspection.name=Unnecessary autowired dependency in XML application context
bean.use.autowire=Unnecessary autowired dependency
bean.autowire.escape=Make autowired dependency explicit

bean.duplicated.bean.name.inspection=Duplicated bean names in XML-based application context
bean.duplicate.bean.name=Bean name duplicated
bean.instantiation.inspection=Invalid non-abstract bean instantiation

model.inspection.injection.value.consistency=Inconsistent injection value in XML application context
model.inspection.injection.value.message={0} must specify a ref or value

model.inspection.injection.value.style=Injection value in XML application context violates conventions
model.inspection.injection.value.style.message=Usage of explicit <value> element
model.inspection.injection.value.style.value.fix=Replace <value> element with "{0}" attribute
model.inspection.injection.value.style.value.fix.family.name=Replace <value> element with attribute
model.inspection.injection.value.style.ref.fix=Replace <ref> element with "{0}" attribute
model.inspection.injection.value.style.ref.fix.family.name=Replace <ref> element with attribute
model.inspection.injection.value.style.ref.message=Usage of explicit <ref> element


util.schema.inspection.name=Incorrectly configured 'util' schema beans defined in XML application context
util.required.class.message=Class must be inheritor of ''{0}''

unparsed.custom.bean.inspection=Unparsed custom Infra beans
unparsed.custom.bean.message=This custom Infra bean has not yet been parsed


required.property.inspection=Missing @Required property injections in the spring xml bean declaration 
required.properties.missed=Required properties missing: ''{0}''
create.missing.properties=Create missing properties
cannot.find.bean.qualified.by=Cannot find bean qualified with {0}
cannot.autowire.bean.of.type=Could not autowire. Bean should be of ''{0}'' type
required.bean.type.inspection=Incorrect injected bean type
placeholders.inspection.display.name=Unresolved placeholders configured in the Infra XML application context
bean.property.extract.name=Extract property value to configuration file

StaticMembersAutowiringInspection.display.name=Incorrect Infra component autowiring or injection on a static class member

model.inspection.inactive.profile=Inactive profile highlighting
bean.attributes.inspection.key=Conflicting Infra bean attribute
component.scan.setup.inspection.key=Invalid package in @ComponentScan or its meta annotation

multiple.context.tooltip.text=Active Context
multiple.context.description.in.module.text=<html><body>  in module <b>{0}</b>.</body></html>
multiple.context.description.label.text=<html><body>File is included in <b>{0} contexts</b>.</body></html>
multiple.context.description.in.modules.label.text=<html><body>File is included in <b>{0} contexts</b> in <b>{1}</b> modules.</body></html>
class.without.matching.constructor.for.autowiring=Class doesn't contain matching constructor for autowiring
multiple.autowiring.constructor=Only one constructor can have @Autowired annotation
autowiredMembersInspection.inspection=Incorrect @Autowired member in a non-Infra component
class.is.not.bean.autowired=Autowired members must be defined in valid Infra bean (@Component|@Service|...)


custom.namespace.registration.inspection.key=Unresolved file or class reference in a spring.handlers or spring.schemas file
java.class.constructor.autowiring.inspection.display.name=Autowiring issues in a Infra bean class constructors
required.properties.inspection=@Required Infra bean property is not injected
required.property.not.mapped=Required property ''{0}'' is not injected

static.members.autowiring=Don't autowire static members
AutowiredFieldsWarningInspection.inspection.display.name=Non recommended 'field' injections
field.injection.is.not.recommended=Field injection is not recommended
field.injection.create.constructor.family.warning=Change field injection. Create constructor
field.injection.add.parameter.family.warning=Change field injection. Add parameter(s) to constructor
field.injection.create.constructor.injection=<html>Create constructor: {0}</html>
field.injection.add.parameters=<html>Add parameter(s) to constructor: {0}</html>
testing.context.dirties.inspection.display.name=Invalid @DirtiesContext 'mode' configuration
testing.transactional.inspection.display.name=Invalid transactional lifecycle method declaration
testing.model.dirties.method.mode.error.message=Setting the method mode on an annotated test class has no meaning.  For class-level control, use classMode instead.
testing.model.dirties.class.mode.error.message=Setting the class mode on an annotated test method has no meaning. For method-level control use methodMode instead..
testing.model.dirties.hierarchy.mode.error.message=hierarchyMode is required when the context is configured as part of the hierarchy via @ContextHierarchy
testing.transactional.wrong.number.of.arguments.error.message=Wrong number of arguments
testing.transactional.void.method.return.type.error.message=Expected method return type is ''void''
ScheduledMethodInspection.inspection.display.name=Incorrect @Scheduled method signature
ScheduledMethodInspection.incorrect.signature=@Scheduled methods must not take any arguments or return anything
method.parameters.removing.fix.family.name=Remove method parameters
method.parameters.removing.fix.text=Change ''{0}'' to no-arg

AsyncMethodInspection.inspection.display.name=Incorrect @Async method signature
AsyncMethodInspection.incorrect.signature=Method annotated with @Async should return ''void'' or "Future-like" type
SpringEventListenerInspection.inspection.display.name=Incorrectly configured  @EventListener methods 

SpringInactiveProfilesHighlightingPass.inactive.profile=Inactive profile
spring.dom.component.scan.stereotypes=Choose Stereotype
spring.dom.component.scan.stereotypes.title=Navigate to components
ContextJavaBeanUnresolvedMethodsInspection.display.name=Unknown init/destroy method in the @Bean annotation
ContextJavaBeanUnresolvedMethodsInspection.cannot.resolve.method=Cannot resolve method

ActivateSpringProfileIntentionAction.activate.profile=Activate profile ''{0}''
ActivateSpringProfileIntentionAction.activate.profile.family.name=Activate profile
ActivateSpringProfileIntentionAction.deactivate.profile=Deactivate profile ''{0}''
ActivateSpringProfileIntentionAction.deactivate.profile.family.name=Deactivate profile


incorrect.resource.type.inspection=Incorrect resource type
IncorrectResourceTypeInspection.incorrect.resource.type=Incorrect resource type
IncorrectResourceTypeInspection.expected.resource.types=Incorrect resource type. Expected types: {0}
import.resource.inspection.display.name=Unresolved file references in @ImportResource locations
property.source.inspection.display.name=Unresolved file references in @PropertySource and @TestPropertySource locations
configuration.proxy.methods.display.name=@Configuration proxyMethods usage warnings
context.configuration.inspection.display.name=Invalid @ContextConfiguration
testing.sql.inspection.display.name=Invalid @Sql and @SqlGroup configurations
transaction.inspection.display.name=Invalid 'PlatformTransactionManager' declaration in @Transactional component
lookup.inspection.display.name=Incorrectly referenced bean in @Lookup annotation of Infra component
depends.on.inspection.display.name=Incorrectly referenced bean in @DependsOn annotation
ContextConfigurationInspection.cannot.find.default.app.context=Cannot find default application context file {0}
ContextConfigurationInspection.create.nested.configuration.class=Create nested ContextConfiguration class
action.generate.autowired.dependencies.action.text=@Autowired Dependency\u2026
AutowiringInspection.add.qualifier.fix=Add qualifier
context.schema.inspection.name=Invalid filter definition in XML-based component scans
ContextComponentScanInconsistencyInspection.annotation.is.expected.here=Annotation is expected here
import.resource.error.message.trailing.space=Trailing space in ''{0}''

profile.expression.inspection=Incorrectly configured @Profile expression
profile.expression.empty=Profile expression must contain text
profile.expression.malformed=Malformed profile expression
profile.unresolved.message=Unknown profile


inspection.group.code=Code
inspection.group.setup=Setup
inspection.group.xml=XML

EventListenerInspection.inspection.display.name=Incorrectly configured  @EventListener methods 

event.publisher.choose.title=Choose Event Publisher
event.publisher.tooltip.text=Go to event publisher
event.publisher.empty.tooltip.text=No event publishers found

event.listener.choose.title=Choose Event Listener
event.listener.tooltip.text=Go to event listener
event.listener.empty.tooltip.text=No event listeners found

cacheable.annotations.inspection.display.name=Incorrectly configured 'caching' annotation
cacheable.names.inspection.display.name=Incorrect required cache names definition
cacheable.and.cache.put.on.the.same.method.display.name=Incorrect usage of @CachePut and @Cacheable on the same method
cacheable.annotations.on.interfaces=Cache* annotations defined on interfaces/interface methods
model.qualifiers.in.class.inspection.display.name=Incorrect injection point autowiring in Infra bean components

cacheable.annotations.should.be.defined.on.public.methods=Caching annotations should be defined on public methods
cacheable.no.cache.could.be.resolved.for.cache.operation=At least one non empty cache name is required per cache operation.
event.listener.method.parameters.count=Method must have maximum one parameter
event.listener.method.visibility.public=Method annotated with @EventListener must be public
event.listener.method.visibility.nonstatic=Method annotated with @EventListener must be non-static

cacheable.element.choose.title=Choose Cacheable Operation
cacheable.element.tooltip.text=Go to cacheable operation with the same name


core.autowired.annotator.name=Autowired
core.bean.annotator.name=Bean
core.component.scan.annotator.name=Component scan

spring.core.dom.annotator.name=Configuration (XML)
core.properties.annotator.name=Properties
core.test.configuration.annotator.name=Test configuration
core.cacheable.annotator.name=Cacheable operations with the same names
core.event.listener.annotator.name=Application events

# Bean
bean.property.tooltip.navigate.declaration=Navigate to the Infra bean property
bean.property.navigate.choose.class.title=Choose Bean Containing The Property
bean.constructor.tooltip.navigate.declaration=Navigate to the Infra bean
bean.constructor.navigate.choose.class.title=Choose Bean Containing The Constructor
bean.methods.tooltip.navigate.declaration=Navigate to the Infra bean method declarations
bean.method.tooltip.navigate.declaration=Navigate to the Infra bean {0} method declaration
bean.filter.tooltip=Start typing to filter elements
bean.class.tooltip.navigate.declaration=Navigate to the Infra bean declaration(s)

navigate.to.autowired.dependencies=Navigate to the autowired dependencies
navigate.to.by.name.autowired.dependencies=Navigate to 'byName' autowired dependencies
autowired.dependencies.goto.related.item.group.name=Autowired Dependencies

gutter.choose.bean.factory.calls.title=Choose BeanFactory.getBean(...) usages
gutter.navigate.no.bean.factory.calls=No matching BeanFactory usages found
gutter.navigate.to.bean.factory.calls.title=Navigate to  BeanFactory.getBean(...) usages
gutter.navigate.no.matching.beans=No matching beans found

scheduled.tasks=Scheduled tasks
scheduled.method=Scheduled method

app.context.to.navigate=Choose Application Context
app.context.navigate.tooltip=Navigate to application context

# facet

settings.common=Common
settings.auto.configure=Allow to auto-configure application contexts
settings.configuration.file.editor=Configuration Files Editor
settings.profiles.panel=Show &Profiles panel
settings.profiles.panel.tooltip=Allow choosing active profile(s)
settings.multiple.context.panel=Show &Multiple Contexts panel
settings.multiple.context.panel.tooltip=Allow choosing active context if file is used in multiple contexts

framework.support.provider.create.empty.config=Create empty {0}
fileset.editor.help.label=<html>Configuration files referenced via <b>\\&lt;import .../\\&gt;</b> or <b>@Import</b> will be added implicitly.<br/>Configuration files used for testing must <em>not</em> be added to contexts.</html>
fileset.circular.dependencies=Circular dependencies between contexts:<br/>{0}<br/>{1}
fileset.contains.testing.configs.short={0, choice, 1#Configuration file|1<{0, number} configuration files} used for testing must <em>not</em> be added to contexts
fileset.contains.testing.configs.full={0, choice, 1#Configuration file|1<{0, number} configuration files} used for testing must <em>not</em> be added to contexts:<br/>{1}
infra.facet.validation.help.action=Show help
infra.facet.validation.disable.action=Disable\u2026
infra.facet.detection.will.be.disabled.for.whole.project=Detection will be disabled for whole project.\n\
  Note that most Infra related features will not work if Infra facet configuration is not performed.\n\n\
  Project Structure | Facets | Detection\n can be used to exclude specific files/folders only and to re-enable.
infra.facet.config.detection=Infra Config Detection
infra.facet.detection.disable.detection=Disable Detection
configuration.check=Infra configuration check

config.file.not.found=File not found
config.files.not.found=No files found
config.file.is.not.infra=The file is not recognized as Infra configuration
config.unmapped.configs.popup.title=Unmapped Infra Configuration Files in {0}
config.display.name=Configuration
config.no.contexts.defined=No application contexts defined
config.detecting.contexts=Detecting application contexts...
configuration.tab.additional.settings=Additional settings
process.explicitly.annotated.beans=Process explicitly annotated beans
facet.context.default.name=Infra Application Context

facet.context.xml.files=XML-based configurations
facet.context.code.files=Code-based configurations
facet.context.properties.files=Additional properties files
facet.context.other.files=Other files
facet.context.autodetected.suffix= (autodetected)
facet.context.autoconfigured.suffix= (autoconfigured)

facet.context.new.title=New Application Context
facet.context.edit.title=Edit Application Context ''{0}''
facet.context.edit.name.label=&Name\:
facet.context.edit.parent.label=&Parent context\:
facet.context.edit.parent.none.selected=<none>
facet.context.edit.name.validation.not.empty=Name must not be empty
facet.context.edit.name.validation.already.exists=Context with such name already exists. If you deleted existing context with such name, you must use "Apply" first.
facet.context.edit.add.file.choose.type=Choose Type

facet.context.remove.title=Remove
facet.context.remove.message=Do you really want to remove application context "{0}"? (No files will be deleted)

config.new.file=Infra Config
create.new.configuration.file=Create new Infra configuration file

framework.title=&Infra

facet.inspection=Incorrect XML application context setup in Infra facet
facet.code.inspection=Incorrect @Configuration class setup in Infra facet
facet.programmatic.inspection=Infra facet programmatic configuration

infra.facet.inspection.create.facet=Create Infra facet
infra.facet.inspection.context.choose=Choose Application Context
infra.facet.inspection.context.create=Create new application context\u2026
infra.facet.inspection.context.not.configured.for.file=Application context not configured for this file
infra.facet.inspection.configure.context.for.file=Configure application context
infra.facet.inspection.check.test.files=Check test files

dependency.node.in.module.tail=(in Module {0})
checking.infra.configuration=Checking Infra configurations in module ''{0}''


bean.with.unknown.name=<anonymous bean>
bean.invalid=<invalid>

infra.intention.category=Infra


# Profile

application.context.configuration=Application context configuration
ChangeActiveProfileDialogUi.radio.button.project=Project
ChangeActiveProfileDialogUi.radio.button.module=Module
ChangeActiveProfileDialogUi.radio.button.context=Context
ChangeActiveProfileDialogUi.radio.button.comment=Comma separated list of profiles
ChangeActiveProfileDialogUi.radio.button.profiles=Profiles:
ChangeActiveProfileDialogUi.radio.button.scope=Scope:


model.inspection.validator.description.text=Infra Model

settings.displayName=TODAY Infrastructure

editor.panel.edit.settings=Panel settings\u2026


cannot.resolve.method=Cannot resolve method ''{0}''
cannot.resolve.charset=Cannot resolve charset ''{0}''

model.directory.error.message=Cannot resolve directory ''{0}''
model.file.error.message=Cannot resolve file ''{0}''
model.bean.error.message=Cannot resolve bean ''{0}''

create.context.file.dtd.1.0=Infra 1.x DTD
create.context.file.dtd.2.0=Infra 2.x DTD
create.context.file.schema.2.0=Infra XSD

bean.base.class.not.found=Cannot resolve required base class ''{0}''
bean.base.classes.not.found=Cannot resolve any of required base classes: {0}

bean.must.be.of.type=Bean must be of ''{0}'' type
bean.must.be.one.of.these.types=Bean must be one of these types: {0}
bean.name.must.be.of.type=Bean ''{0}'' must be of ''{1}'' type
bean.name.must.be.one.of.these.types=Bean ''{0}'' must be one of these types: {1}


dom.only.one.of=Exactly one of {0} is required
dom.one.or.all.of.attributes=One of {0} (or all) are required
dom.if.exists.other.required=When {0} exists, {1} is required
dom.superfluous.attribute=Attribute {0} is superfluous
dom.superfluous.attribute.with.default=Attribute {0} with default value ''{1}'' is superfluous
dom.explicit.bean.reference.required=No {0} with default id ''{1}'' found

pattern.fileset.no.matching.files=Cannot find matching files

beans.view.show.library.beans.title=Show Library Beans
beans.view.show.bean.documentation.title=Show Bean Documentation
beans.view.show.bean.graph.title=Show Bean Graph
beans.view.show.configuration.files=Show Configuration Files

InfraSpiClassesListJamConverter.unresolved.message.pattern=Cannot resolve ''{0}'' for key ''{1}''
BindingPropertyReference.unresolved.message.pattern=Cannot resolve property ''{0}''

FieldRetrievingFactoryBeanConverter.field.name.expected=Field name expected
FieldRetrievingFactoryBeanConverter.cannot.resolve.field=Cannot resolve field ''{0}''

ImplicitSubclassInspection.display.forClass.annotated=Classes annotated with ''@{0}'' could be implicitly subclassed and must not be final
ImplicitSubclassInspection.display.forMethod.annotated=Methods annotated with ''@{0}'' must be overridable
ImplicitSubclassInspection.display.bean.in.configuration=@Bean-method in @Configuration must be overridable


editor.panel.profiles.tooltip=Active Profile
editor.panel.profiles.tooltip.action.name=Change profiles\u2026

spring.el.inspection.key=Incorrect Spring Expression Language (SpEl) syntax
spring.el.static.field.inspection.key=Incorrect injecting of SpEL in a static field
bean.already.exists=Infra Bean with name ''{0}'' already exists in {1}

introduce.bean.intention=Introduce bean

parse.custom.bean.intention=Parse custom bean
parsing.custom.bean=Running custom Infra bean handlers\u2026
parse.custom.bean.error=Error Parsing Custom Bean
parse.custom.bean.success=Custom Handler Has Finished Successfully
parse.no.custom.beans=Parser produced no beans
parse.only.infrastructure.beans=Parser produced only infrastructure beans
parse.these.beans=Custom namespace handler produced the following bean definitions:\n{0}
parse.these.beans.induct=Custom namespace handler produced the following bean definition:\n{0}\n\n\
  Do you want to assume that all beans \n\
  from namespace ''{1}'' with local name ''{2}''\n\
  have the same class and take their id from ''{3}'' attribute?
parse.these.beans.induct.only.this=This Bean
parse.these.beans.induct.all.beans=All Beans
parse.no.namespace.handler=Cannot find custom handler for namespace ''{0}''
custom.bean.no.id=IntelliJ IDEA can't find this bean's id in config file. Renaming will probably produce\nincorrect code. Do you want to proceed?
custom.bean.no.id.title=Warning

use.existing.quick.fixes.use.existing.bean.family.name=Use existing bean
use.existing.quick.fixes.use.existing.bean.from.context=Use existing bean from context ''{0}''\u2026
use.existing.quick.fixes.choose.fix.for=Choose Fix For ''{0}''
use.existing.quick.fixes.add.dependency.to.context=Add dependency to context ''{0}''
use.existing.quick.fixes.add.infra.xml.to.fileset.action=Add ''{0}'' to context ''{1}''
use.existing.quick.fixes.add.import.action="Add <import> for ''{0}''
use.existing.quick.fixes.open.infra.facet.settings=Open Infra facet settings\u2026


beans.tab.title=Beans
beans.select.in.target=Infra Beans
aliases=Aliases
profile=Profile
scope=Scope


bean.instantiation.by.factory=Infra Bean (Instantiated By a Factory Bean)
bean.instantiation.using.factory.method=Infra Bean (Instantiated By a Static Factory Method)
generate.properties=Properties\u2026
generate.setter.dependencies=Setter Dependency\u2026
generate.constructor.dependencies=Constructor Dependency\u2026
action.Infra.Beans.Generate.Setter.Dependency.Action.text=Infra Setter Dependency\u2026
action.Infra.Beans.Generate.Constructor.Dependency.Action.text=Infra Constructor Dependency\u2026
bean.properties.chooser.title=Choose Properties
bean.dependencies.chooser.title=Choose Bean
beans.chooser.show.context.files=Show Context Files
beans.chooser.all.context.files=All beans
beans=Beans
mark.bean.as.abstract=Mark bean as abstract
abstract.class.not.allowed=Abstract class not allowed for non-abstract beans
interface.not.allowed=Interface not allowed for non-abstract beans

InfraBeanMoveHandler.no.other.files.found=No other Infra files found
InfraBeanMoveHandler.choose.file=Choose File


########################

method.must.be.static=Factory method ''{0}'' must be static
method.must.not.be.static=Factory method ''{0}'' must not be static
method.must.be.public=Factory method ''{0}'' should be public
method.cannot.instantiate.bean=Factory method ''{0}'' cannot instantiate bean

bean.autowiring.by.type.none=Could not autowire. No beans of ''{0}'' type found.
bean.autowiring.by.type.no.beans=Could not autowire. No beans of ''{0}'' or ''{1}'' types found.
bean.autowiring.by.type=Could not autowire. There is more than one bean of ''{0}'' type. Beans: {1}. Properties: ''{2}''
bean.class.autowired.by.type=Could not autowire. There is more than one bean of ''{0}'' type.
bean.autowiring.by.type.no.parameter.for.autowired.method= Autowired {0} without parameters
bean.class.autowired.incorrect.qualifier.type=Could not autowire. Qualified bean must be of ''{0}'' type.
bean.class.unknown.qualifier.bean=Cannot find bean with qualifier ''{0}''

bean.bad.property.type=Property of ''{0}'' type cannot be injected by ''{1}''
idref.cannot.be.added.in.collection=Cannot be added in collection of ''{0}'' type
timeout.parsing.bean=Custom bean parsing took too long
process.unexpectedly.terminated=Process unexpectedly terminated{0}
try.parsing.custom.beans=Try parsing custom beans
internal.error.parsing.bean=Internal error parsing bean; output:\n{0}

cannot.find.bean.constructor.with.parameters.count=No matching constructor found in class ''{0}''
cannot.find.factory.method.with.parameters.count=No matching factory method found in class

cannot.find.constructor.arg.index=Cannot find constructor with argument index {0}
cannot.find.constructor.arg.index.in.class=Cannot find constructor with argument index {0} in class {1}
cannot.find.factory.method.index=Cannot find factory method with argument index {0} in class {1}

incorrect.constructor.arg.index.not.unique=Index must be unique
constructor.arg.incorrect.value.type=Injected value type must correspond to constructor arg type




bean.property=Property
bean.constructor.arg=Constructor argument
bean.map.entry=Map entry

bean.property.value.inconsistency.ref.or.value.sub.element.must.defined={0} is only allowed to contain either "ref" attribute OR "value" attribute OR sub-element
bean.property.value.inconsistency.more.one.sub.element ={0} must not contain more than one sub-element
bean.ref.attributes.inconsistency=<ref> tag is only allowed to contain either "bean" attribute OR "local" attribute OR "parent" attribute
bean.ref.attributes.must.specify=<ref> tag must specify a bean
bean.idref.attributes.inconsistency=<idref> tag is only allowed to contain either "bean" attribute OR "local" attribute
bean.idref.attributes.must.specify=<idref> tag must specify a bean
model.inspection.injection.value.entry.key=Map entry must specify a key
bean.property.value.inconsistency.key=Map entry is only allowed to contain either "key" attribute OR "key-ref" attribute OR <key> sub-element

model.inspection.injection.value.add.ref=Add "ref" attribute
model.inspection.injection.value.add.list=Add <list> tag
model.inspection.injection.value.add.set=Add <set> tag
model.inspection.injection.value.add.array=Add <array> tag
model.inspection.injection.value.add.map=Add <map> tag


spring.parent.bean.tooltip=Navigate to the child declarations

spring.choose.bean.templates.dialog.title=Add {0} Beans
spring.choose.bean.templates.dialog.beans=Beans


framework.title.spring=&Infra

do.you.want.to.move.bean.to.the.top.level=Do you want to move the bean to the top level?
move.bean.to.the.top.level=Move Bean To the Top Level
move.bean=Move Bean
update.schema.intention=Convert to Infra XML schema
use.p.namespace=Convert to p-namespace
xml.schema.will.be.updated=XML schema will be updated to spring-beans.xsd. \nDo you want to proceed?
xml.schema.update.is.required=XML Schema Update Is Required

create.missing.mappings=Create missing mappings for ''{0}''
create.missing.mappings.family.name=Create missing mappings

spring.app.context.to.navigate=Choose Application Context
spring.app.context.navigate.tooltip=Navigate to Application Context


choose.autowired.candidates.title=Choose Autowired Candidate
navigate.to.autowired.candidates.title=Navigate to autowired candidates
navigate.no.matching.autowired.candidates=No matching autowired candidates found


# suppress inspection "UnusedProperty"
method.return.type.make.async.family.name=Change method to return "Future-like" value
method.return.type.make.async.fix.text=Change method to return ''{0}''
navigate.to.fileset.configuration=Navigate to application context configurations

bean.method.called.from.configuration.without.proxy=Method annotated with @Bean is called directly in a @Configuration where proxyBeanMethods set to false. Set proxyBeanMethods to true or use dependency injection.
bean.method.called.without.proxy=Method annotated with @Bean is called directly. Use dependency injection instead.

action.DumpSpringConfiguration.text=Dump Infra Configuration
group.Internal.Spring.text=Infra
action.SpringChangeActiveProfiles.text=Change Active Infra Profiles\u2026
action.Spring.Create.Context.File.text=Infra Config
action.beans.Generate.Action.text=Infra Bean
action.SpringConfigurationCheckAction.text=Check Infra Configuration


spring.configuration.check=Infra configuration check
unmapped.configuration.fix.instruction=Please configure Infra facet or use ''{0}'' to add one including all unmapped files.
unmapped.configuration.configure.facet=Please configure Infra facet.
unmapped.configuration.create.default.context=Create default context
unmapped.configuration.files.count={0, choice, 1#1 file|1<{0, number} files}
unmapped.configuration.files.found=Unmapped Infra configuration files found.
unmapped.configuration.programmatic.contexts.found=Programmatic contexts found:
unmapped.configuration.files.short={0, choice, 1#Unmapped Infra configuration file|1<{0, number} unmapped Infra configuration files}
unmapped.configuration.files.full={0, choice, 1#Unmapped Infra configuration file|1<{0, number} unmapped Infra configuration files}:<br/>{1}
unmapped.configuration.is.not.available.during.index.update= ''{0}'' is not available during index update
unmapped.configuration.open.facet.configuration=Open Facet Configuration
unmapped.configuration.infra.configuration=Infra Configuration
unmapped.configuration.autodetected.context.found.for=Autodetected context found for {0} .\nPlease check and setup additional manual context (if required).
scanning.for.programmatic.contexts=Scanning for programmatic contexts\u2026
checking.spring.configuration=Checking Infra configurations in module ''{0}''
searching.for.stereotype.usages=Searching for stereotype usages\u2026
searching.for.implicit.usages=Searching for implicit usages\u2026

model.actions.dump.model.gathering.infra.models=Gathering Infra Models\u2026
model.actions.dump.model.scanning.infra.models=Scanning Infra models\u2026
model.actions.dump.model.generating.json=Generating JSON\u2026
model.actions.generate.beans=Create Infra Bean
custom.namespace.quick.fixes.family.name=Create custom namespace bean
custom.namespace.quick.fixes.create.custom.namespace.bean=Create custom namespace bean ({0} variants)\u2026
custom.namespace.quick.fixes.create.custom.namespace.bean.with.id=Create Custom Namespace Bean {0}
custom.namespace.quick.fixes.create.name=Create {0}
custom.namespace.quick.fixes.popup.title=Create Custom Namespace Bean

setup.programmatic.context.quick.fix.setup.infra.context=Setup Infra context\u2026
setup.programmatic.context.quick.fix.settings.displayName=Infra
setup.programmatic.context.quick.fix.context.with.name=The ''{0}'' context has been created.\n\
  Suppress the inspection to disable highlighting.\n\n\
  To re-create the context, delete it in the Infra facet and disable inspection suppression.\n\n\
  Open the Infra facet?
facet.programmatic.inspection.context=Programmatic Infra context
duplicated.bean.name.inspection.name.view.duplicates=View duplicates
duplicated.bean.quick.fix.popup.title=View Duplicates
UnparsedCustomBeanInspection.unsupported.tag=Unsupported tag ''{0}'' for namespace ''{1}'', please file issue (Help|{2})
change.active.profile.dialog.profiles=Change Active Infra Profiles
change.active.profile.dialog.module=Module ''{0}''
change.active.profile.dialog.context=Context ''{0}''
UpdateSchemaIntention.schema.update=Infra Schema Update
UpdateSchemaIntention.schema.update.failed.for.invalid.file=Schema update failed for invalid file {0}
reference.injector.resource.path=Infra Resource Path
reference.injector.bean.name=Infra Bean Name
reference.injector.placeholder=Infra Placeholder
InfraBeansView.show.implicit.beans=Show Implicit Beans
InfraBeansView.show.infrastructure.beans=Show Infrastructure Beans
InfraBeansView.show.modules=Show modules
InfraBeansView.show.application.contexts=Show application contexts
InfraBeansView.config.no.contexts.defined=No application contexts defined

message.navigation.available.during.indexing=Navigation is not available during indexing

bean.pointer.invalid=<invalid>
bean.pointer.unknown=<unknown>

spring.scheduled.tasks=Scheduled tasks
spring.scheduled.method=Scheduled method
notification.group.beans=Infra custom bean parsing failed
notification.group.spring.configuration=Infra configuration issues detected


bean.class.navigate.choose.class.title=Choose Bean
bean.show.beans.candidates.title=Bean Candidates

# App

boot.config.files.name.setting=Spring Boot: {0} value
boot.custom.config.files.locations=Spring Boot: custom bootstrap config files location
infra.non-strict.conditional.evaluation=Spring Boot: non-strict @Conditional evaluation
boot.config.files.section.title=Application Configuration Files
infra.config.files.add.ad=Use (+) to add configuration files from a custom location
